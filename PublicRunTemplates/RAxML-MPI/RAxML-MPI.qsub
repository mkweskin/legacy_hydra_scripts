#  RAxML-MPI Hydra Submission
#  The MPI version of RAxML will use CPUs across cluster nodes.


#  Start your job by entereing the command: source RAxML-threads.qsub
#  You need the file RAxML-MPI.job which has your RAxML options

#  CPUs (-pe):
#    This program uses MPI for parallel processing. It can use CPUs sperad across cluster nodes.
#    Specify the number of CPUs to request by changing the number after "orte".

#  Queue (-q):
#    Specify the queue for your approximate run length.
#    The parallel queues are:
#      sTN.q (max 3 hours)
#      mTN.q (max 36 hours)
#      lTN.q (max 18 days)
#      vTN.q (max 108 days)

#  Memory: (mr, h_data, h_vmem)
#    Jobs on the standard memory Hydra queues can request up to 4GB RAM/CPU
#      Note: in parallel programs the total memory will be (Number of CPUs * RAM/CPU)
#      so a request of 2GB of RAM and 8 CPUs will give your job 16GB of RAM
#    For 2GB of RAM:
#      -l mr=2G,h_data=2G,h_vmem=2.5G
#        mr: amount a RAM you're reservering on the machine
#        h_data: Kill the job if the RAM usage is over this amount
#        h_vmem: Kill the job is the Virtual RAM usage is over this amount (this can be somewhat more than the h_data value)

qsub -pe orte 25 -q lTN.q -N RAxML -S /bin/sh -V -j y -o job.out -cwd -l mr=2G,h_data=2G,h_vmem=2.5G RAxML-MPI.job